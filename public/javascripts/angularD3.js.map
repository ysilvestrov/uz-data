{"version":3,"sources":["angularD3.js","webpack/bootstrap 02d73fd3418769bd12b9","./index.js","external \"d3\"","./angularD3/directives/arc.coffee","./angularD3/directives/area.coffee","./angularD3/directives/axis.coffee","./angularD3/directives/bars.coffee","./angularD3/directives/chart.coffee","./angularD3/directives/data.coffee","./angularD3/directives/gradient.coffee","./angularD3/directives/include.coffee","./angularD3/directives/line.coffee","./angularD3/directives/pie.coffee","./angularD3/index.coffee","./angularD3/services/d3service.coffee","external \"angular\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","d3","angular","directive","defaults","x","y","innerRadius","labelRadius","transition","transitionDuration","value","label","restrict","require","link","scope","el","attrs","chartController","arcLabel","arcPath","center","chart","options","redraw","extend","getChart","parseFloat","data","arc","arcTween","labelArc","radius","append","attr","style","length","Math","min","innerWidth","innerHeight","svg","outerRadius","startAngle","endAngle","d","PI","i","this","_current","interpolate","t","datum","ease","duration","attrTween","text","registerElement","order","columns","$scope","$el","$attrs","area","areaElement","areaStacked","getScale","xscale","yscale","vertical","x0","x1","y0","y1","charts","mappedData","name","stack","stackedData","isString","split","map","trim","j","len","results","push","values","k","len1","results1","layout","offset","selectAll","enter","exit","remove","$watch","orientation","ticks","extent","priority","customTimeFormat","filter","tickValues","adjustTickLabels","axisElement","drawGrid","getAxis","grid","positionLabel","range","scale","translation","updateScale","reverse","time","linear","axis","format","tickSize","orient","timeScale","timeInterval","innerTickSize","outerTickSize","multi","copy","tickFormat","Date","timeFormat","margin","bottom","top","left","right","g","firstTickLabels","lastTickLabels","tickLabels","tickDy","tickDx","tickAnchor","select","slice","lastTickDy","lastTickDx","lastTickAnchor","firstTickDy","firstTickDx","listTickAnchor","firstTickAnchor","tween","domainValues","domain","max","addScale","$watchCollection","width","barsElements","height","bars","controller","$window","$timeout","debounce","elements","scales","sortOrder","updateSize","offsetWidth","offsetHeight","getSvg","update","Number","_this","a","b","element","ref","sort","updateInterval","addEventListener","watch","accessor","callback","src","csv","then","rows","gradient","insert","forEach","$observe","val","stops","color","opacity","includes","html","line","linePath","stroke","minOffset","colorScale","pie","colors","category20","category20b","category20c","getPosition","padding","prevbb","each","cpx","cpy","ctx","cty","offsetArc","position","relativePosition","thisbb","centroid","avoidCollisions","_position","_","transform","getBoundingClientRect","r","v","sqrt","pow","provider","$get","$cacheFactory","$rootScope","$q","cache","cached","deferred","defer","get","resolve","$apply","put","reject","promise"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GE5ChCA,EAAA,KFmDM,SAASI,EAAQD,GGnDvBC,EAAAD,QAAAQ,IHyDM,SAASP,EAAQD,EAASH,GIzDhC,GAAAW,KAAKX,EAAQ,GAEbY,QAAQR,OAAO,OAAOS,UAAU,QAAS,WACvC,GAAAC,EJ0EC,OI1EDA,GAAW,WJ+DR,OI9DDC,EAAG,EACHC,EAAG,EACHC,YAAa,EACbC,YAAa,EACbC,WAAY,eACZC,mBAAoB,IACpBC,MAAO,QACPC,MAAO,WAETC,SAAU,IAEVC,QAAS,WAETC,KAAM,SAACC,EAAOC,EAAIC,EAAOC,GACvB,GAAAC,GAAAC,EAAAC,EAAAC,EAAAhB,EAAAC,EAAAgB,EAAAC,CJmGG,OInGHD,GAAUtB,QAAQwB,OAAOtB,IAAYc,GAErCK,EAAQJ,EAAgBQ,WACxBpB,EAAcqB,WAAWJ,EAAQjB,aACjCC,EAAcoB,WAAWJ,EAAQhB,aAEjCc,EAAS,KACTD,EAAU,KACVD,EAAW,KACXK,EAAS,SAACI,GACR,GAAAC,GAAAC,EAAAC,EAAAC,CAOA,OAPAX,OAAWH,EAAgBQ,WAAWO,OAAO,KAAKC,KAAK,QAAS,QAChEd,MAAYC,EAAOY,OAAO,SAC1Bd,MAAaE,EAAOY,OAAO,QACxBC,KAAK,QAAS,aACdA,KAAK,KAAM,UACXC,MAAM,cAAe,WAEV,MAAAP,GAA2B,IAAjBA,EAAKQ,QAE7BJ,EAASK,KAAKC,IAAIpB,EAAgBqB,WAAYrB,EAAgBsB,aAAa,EAE3EnB,EAAOa,KAAK,YAAa,aAAeF,EAAU,IAAMA,EAAS,KAEjEH,EAAM7B,EAAGyC,IAAIZ,MACVa,YAAYV,GACZ1B,YAAY0B,EAAS1B,GACrBqC,WAAW,GACXC,SAAS,SAACC,GJuDR,MIvDcA,GAAE,IAAM,EAAIR,KAAKS,KAEpChB,EAAW,SAACe,GACV,GAAAE,EJ6DG,OALqB,OAAjBC,KAAKC,WIxDZD,KAACC,SAAY,GACbF,EAAI/C,EAAGkD,YAAYF,KAACC,SAAUJ,GAC9BG,KAACC,SAAWJ,EACZ,SAACM,GJ2DI,MI3DEtB,GAAIkB,EAAEI,MAEfpB,EAAW/B,EAAGyC,IAAIZ,MACfa,YAAYV,EAASzB,GACrBD,YAAY0B,EAASzB,GAExBa,EAAQgC,MAAMxB,EAAKL,EAAQb,QACxBF,aACA6C,KAAK9B,EAAQf,YACb8C,SAAS/B,EAAQd,oBACjB8C,UAAU,IAAKzB,GAElBX,EAASqC,KAAK5B,EAAKL,EAAQZ,SA5B3B,QA8BFO,EAAgBuC,gBAAgBjC,EAAQD,EAAQmC,YJ4D9C,SAASjE,EAAQD,GK7HvBS,QAAQR,OAAO,OAAOS,UAAU,SAAU,WACxC,GAAAC,ELmIC,OKnIDA,GAAW,WLiIR,WK/HHS,SAAU,IACVC,QAAS,WACTE,OACE4C,QAAS,KAEX7C,KAAM,SAAC8C,EAAQC,EAAKC,EAAQ5C,GAE1B,GAAA6C,GAAAC,EAAAC,EAAA1C,EAAAC,EAAApB,EAAAC,CL4OG,OK5OHkB,GAAUtB,QAAQwB,OAAOtB,IAAY2D,GACrC1D,EAAIc,EAAgBgD,SAAS3C,EAAQ4C,QAAU5C,EAAQnB,GACvDC,EAAIa,EAAgBgD,SAAS3C,EAAQ6C,QAAU7C,EAAQlB,GAEpDkB,EAAQ8C,UACTN,EAAO/D,GAAGyC,IAAIsB,OACX1D,EAAE,SAACwC,GLiID,MKjIOzC,GAAEyC,EAAEzC,KACbkE,GAAG,GACHC,GAAG,SAAC1B,GLiIF,MKjIQxC,GAAEwC,EAAExC,KACjB4D,EAAcjE,GAAGyC,IAAIsB,OAClB1D,EAAE,SAACwC,GLkID,MKlIOzC,GAAEyC,EAAEzC,KACbkE,GAAG,SAACzB,GLmIF,MKnIQxC,GAAEwC,EAAE2B,MACdD,GAAG,SAAC1B,GLoIF,MKpIQxC,GAAEwC,EAAExC,EAAIwC,EAAE2B,QAEvBT,EAAO/D,GAAGyC,IAAIsB,OACX3D,EAAE,SAACyC,GLqID,MKrIOzC,GAAEyC,EAAEzC,KACboE,GAAG,WLsID,MKtIItD,GAAgBsB,cACtBiC,GAAG,SAAC5B,GLuIF,MKvIQxC,GAAEwC,EAAExC,KACjB4D,EAAcjE,GAAGyC,IAAIsB,OAClB3D,EAAE,SAACyC,GLwID,MKxIOzC,GAAEyC,EAAEzC,KACboE,GAAG,SAAC3B,GLyIF,MKzIQxC,GAAEwC,EAAE2B,MACdC,GAAG,SAAC5B,GL0IF,MK1IQxC,GAAEwC,EAAExC,EAAIwC,EAAE2B,OAEzBR,EAAc,KACdxC,EAAS,SAACI,GACR,GAAA8C,GAAAf,EAAAgB,EAAAC,EAAAC,EAAAC,EAAApE,CAEA,OAFAsD,OAAgB9C,EAAgBQ,WAAWO,OAAO,KAC/CC,KAAK,QAAS,SACH,MAAAN,GAA2B,IAAjBA,EAAKQ,SACN,MAAAb,EAAAlB,IAAvBsD,EAAUpC,EAAQlB,GACf,MAAAuD,EAAAD,UACDA,EAAUC,EAAOD,SACL,MAAAA,IACX1D,QAAQ8E,SAASpB,KAClBA,EAAUA,EAAQqB,MAAM,KAAKC,IAAI,SAACnF,GLmJ7B,MKnJmCA,GAAEoF,UAChB,IAAlBvB,EAAQvB,UAElBuC,EAAA,WLuJK,GAAIQ,GAAGC,EAAKC,CAEZ,KKzJQA,KAAAF,EAAA,EAAAC,EAAAzB,EAAAvB,OAAAgD,EAAAD,ML0JNP,EAAOjB,EAAQwB,GACfE,EAAQC,MK1JbV,KAAMA,EACNW,OAAA,WL4JS,GAAIC,GAAGC,EAAMC,CAEb,KK9JDA,KAAAF,EAAA,EAAAC,EAAA7D,EAAAQ,OAAAqD,EAAAD,ML+JG9E,EAAQkB,EAAK4D,GACbE,EAASJ,MK/JlBlF,EAAGM,EAAMa,EAAQnB,GACjBC,EAAGK,EAAMkE,ILmKF,OAAOc,OAIb,OAAOL,MKtKZR,EAAQ7E,GAAG2F,OAAOd,QAAQU,OAAO,SAAC1C,GLyK7B,MKzKmCA,GAAE0C,SACV,MAAAhE,EAAAqE,QAAhCf,EAAMe,OAAOrE,EAAQqE,QACrBd,EAAcD,EAAMF,GAEpBD,EAASV,EAAY6B,UAAU,aAAajE,KAAKkD,GACjDJ,EAAOoB,QAAQ7D,OAAO,QACtByC,EAAOxC,KAAK,QAAS,SAACW,GL4KjB,MK5KuB,QAAQA,EAAE+B,OACnCpE,aACA8C,SAAS,KACTpB,KAAK,IAAK,SAACW,EAAEE,GAAM,MAAQ,KAALA,EAAYgB,EAAKlB,EAAE0C,QAAatB,EAAYpB,EAAE0C,UACvEb,EAAOqB,OACJ7D,KAAK,IAAK,SAACW,EAAEE,GAAM,MAAQ,KAALA,EAAYgB,EAAKlB,EAAE0C,QAAatB,EAAYpB,EAAE0C,UACpES,UA1BH,QA4BFpC,EAAOqC,OAAO,UAAW/E,EAAgBM,QAAQ,GACjDN,EAAgBuC,gBAAgBjC,EAAQD,EAAQmC,YL4L9C,SAASjE,EAAQD,GM9PvBS,QAAQR,OAAO,OAAOS,UAAU,SAAU,WACxC,GAAAC,ENwQC,OMxQDA,GAAW,WNkQR,OMjQD+F,YAAa,SACbC,MAAO,IACPC,QAAQ,KAEVC,SAAU,EACVzF,SAAU,IACVC,QAAS,WACTE,OACEuF,iBAAkB,IAClBC,OAAQ,IACRC,WAAY,KAEd1F,KAAM,SAAC8C,EAAQC,EAAKC,EAAQ5C,GAC1B,GAAAuF,GAAAC,EAAAC,EAAAC,EAAAC,EAAAlG,EAAAY,EAAAuF,EAAAC,EAAAvF,EAAAwF,EAAAC,EAAAC,CN2bG,OM3bH3F,GAAUtB,QAAQwB,OAAOtB,IAAY2D,GAErCiD,EAAQ,WACN,MAA0B,QAAvBxF,EAAQ2E,aAA+C,WAAvB3E,EAAQ2E,YACtC,MAAA3E,EAAA4F,SACAjG,EAAgBqB,WAAY,IAE5B,EAAGrB,EAAgBqB,YAEnB,MAAAhB,EAAA4F,SACA,EAAGjG,EAAgBsB,cAEnBtB,EAAgBsB,YAAa,IAEpCyE,EAAc,WACZ,MAA0B,WAAvB1F,EAAQ2E,YACT,gBAAgBhF,EAAgBsB,YAAY,IACf,QAAvBjB,EAAQ2E,YACd,kBAC6B,SAAvB3E,EAAQ2E,YACd,kBAC6B,UAAvB3E,EAAQ2E,YACd,aAAahF,EAAgBqB,WAAW,OADrC,QAILyE,EADkB,SAAjBzF,EAAQyF,MACDhH,GAAGoH,KAAKJ,QACVzF,EAAQyF,MACNhH,GAAGgH,MAAMzF,EAAQyF,SAEjBhH,GAAGgH,MAAMK,SAEnBT,EAAU,WACR,GAAAU,GAAAC,EAAAC,CNuSG,OMvSHF,GAAOtH,GAAGyC,IAAI6E,OAAON,MAAMA,GAAOS,OAAOlG,EAAQ2E,aAC9C3E,EAAQ4E,OACTmB,EAAKnB,MAAM5E,EAAQ4E,OAClB5E,EAAQmG,WACTJ,EAAKnB,MAAMnG,GAAGoH,KAAK7F,EAAQmG,WAAYnG,EAAQoG,cAC9C/D,EAAO4C,YACRc,EAAKd,WAAW5C,EAAO4C,YACtBjF,EAAQiG,WACTA,EAAWjG,EAAQiG,SAASxC,MAAM,KAClCsC,EAAKM,cAAcJ,EAAS,IAC5BF,EAAKO,cAAcL,EAAS,KAC3B,MAAA5D,EAAA0C,mBAGDiB,EAASvH,GAAGoH,KAAKG,OAAOO,MAAM7H,QAAQ8H,KAAKnE,EAAO0C,mBAClDgB,EAAKU,WAAW,SAACtH,GN4QZ,MM5QsB6G,GAAW,GAAAU,MAAKvH,OAC1C,MAAAa,EAAA2G,YACDX,EAASvH,GAAGoH,KAAKG,OAAOhG,EAAQ2G,YAChCZ,EAAKU,WAAW,SAACtH,GN+QZ,MM/QsB6G,GAAW,GAAAU,MAAKvH,OACrC,MAAAa,EAAAgG,SACNA,EAASvH,GAAGuH,OAAOhG,EAAQgG,QAC3BD,EAAKU,WAAWT,IAClBD,GAEFR,EAAgB,SAACnG,GACf,MAA0B,WAAvBY,EAAQ2E,YACTvF,EAAMuB,KAAK,IAAK,GAAGhB,EAAgBqB,WAAa,GAC7CL,KAAK,KAAM,GAAGhB,EAAgBiH,OAAOC,QACrClG,KAAK,QAAS,wBACY,QAAvBX,EAAQ2E,YACdvF,EAAMuB,KAAK,IAAK,GAAGhB,EAAgBqB,WAAa,GAC7CL,KAAK,KAAM,IAAIhB,EAAgBiH,OAAOE,KACtCnG,KAAK,QAAS,wBACY,SAAvBX,EAAQ2E,YACdvF,EAAMuB,KAAK,IAAK,IAAIhB,EAAgBsB,YAAc,GAC/CN,KAAK,KAAM,KAAIhB,EAAgBiH,OAAOG,KAAO,KAC7CpG,KAAK,QAAS,wBACdA,KAAK,YAAa,eACQ,UAAvBX,EAAQ2E,YACdvF,EAAMuB,KAAK,IAAK,GAAGhB,EAAgBsB,YAAc,GAC9CN,KAAK,KAAM,KAAIhB,EAAgBiH,OAAOI,MAAQ,KAC9CrG,KAAK,QAAS,wBACdA,KAAK,YAAa,cAJlB,QAMPyE,EAAW,SAACE,EAAMS,GAChB,MAA0B,WAAvB/F,EAAQ2E,YACTW,EAAKjH,KAAK0H,EAAKE,SAAStG,EAAgBsB,YAAa,EAAG,GACrDwF,WAAW,KAEe,QAAvBzG,EAAQ2E,YACdW,EAAK3E,KAAK,YAAa,gBAAgBhB,EAAgBsB,YAAY,KAChE5C,KAAK0H,EAAKE,SAAStG,EAAgBsB,YAAa,EAAG,GACnDwF,WAAW,KAEe,SAAvBzG,EAAQ2E,YACdW,EAAK3E,KAAK,YAAa,aAAahB,EAAgBqB,WAAW,QAC5D3C,KAAK0H,EAAKE,SAAStG,EAAgBqB,WAAY,EAAG,GAClDyF,WAAW,KAEe,UAAvBzG,EAAQ2E,YACdW,EAAKjH,KAAK0H,EAAKE,SAAStG,EAAgBqB,WAAY,EAAG,GACpDyF,WAAW,KAFX,QAKPvB,EAAmB,SAAC+B,GAClB,GAAAC,GAAAC,EAAAC,CAmBA,OAnBAA,GAAaH,EAAE3C,UAAU,cACtBtE,EAAQqH,QACTD,EAAWzG,KAAK,KAAMX,EAAQqH,QAC7BrH,EAAQsH,QACTF,EAAWzG,KAAK,KAAMX,EAAQsH,QAC7BtH,EAAQuH,YACTH,EAAWxG,MAAM,cAAeZ,EAAQuH,YAC1CJ,EAAiB1I,GAAG+I,OAAOJ,EAAW,GAAGK,MAAM,IAAI,IAChDzH,EAAQ0H,YACTP,EAAexG,KAAK,KAAMX,EAAQ0H,YACjC1H,EAAQ2H,YACTR,EAAexG,KAAK,KAAMX,EAAQ2H,YACjC3H,EAAQ4H,gBACTT,EAAevG,MAAM,cAAeZ,EAAQ4H,gBAC9CV,EAAkBzI,GAAG+I,OAAOJ,EAAW,GAAG,IACvCpH,EAAQ6H,aACTX,EAAgBvG,KAAK,KAAMX,EAAQ6H,aAClC7H,EAAQ8H,aACTZ,EAAgBvG,KAAK,KAAMX,EAAQ8H,aAClC9H,EAAQ+H,eACTb,EAAgBtG,MAAM,cAAeZ,EAAQgI,iBAD/C,QAGF7C,EAAc,KACdG,EAAO,KACPlG,EAAQ,KAERa,EAAS,SAACI,GAER,GAAA0F,GAAAqB,CAUA,OAVAjC,OAAgBxF,EAAgBQ,WAAWO,OAAO,KAC/CC,KAAK,QAAS,aAAaX,EAAQ2E,YAAY,SAAQ3E,EAAQqD,MAC/D1C,KAAK,YAAa+E,MAClB1F,EAAQZ,QACTA,MAAU+F,EAAYzE,OAAO,QAAQC,KAAK,QAAS,cAAcsB,KAAKjC,EAAQZ,SAC7EY,EAAQsF,OACTA,MAAS3F,EAAgBQ,WAAWO,OAAO,KACxCC,KAAK,QAAS,uBAAuBX,EAAQqD,QAElD0C,EAAOV,IACO,MAAAhF,GAA2B,IAAjBA,EAAKQ,QACsBzB,GAAnDmG,EAAcnG,EAAMH,aAAa8C,SAAS,MAC1CoD,EAAYlG,aAAa8C,SAAS,KAC/BpB,KAAK,YAAa+E,KAClBrH,KAAK0H,GACLzB,UAAU,aACR2D,MAAM,UAAW,MACjBA,MAAM,UAAW,MACjBA,MAAM,oBAAqB,MAEmB,MAAA3C,GAAnDF,EAASE,EAAKrG,aAAa8C,SAAS,KAAMgE,GAC1CqB,EAAajC,EAAYb,UAAU,cACnCa,EAAY9G,KAAK6G,IAZjB,QAcFS,EAAc,SAACtF,GACb,GAAAwB,GAAAqG,CAAA,IAAc,MAAA7H,GAA2B,IAAjBA,EAAKQ,OAQ7B,MAPA4E,GAAMD,MAAMA,KACTxF,EAAQmI,OAGTD,EADC7F,EAAO2C,OACO3C,EAAO2C,OAAO3E,GAE7B,WN0QK,GAAImB,GAAGqC,EAAKC,CAEZ,KM5QWA,KAAAtC,EAAA,EAAAqC,EAAAxD,EAAAQ,OAAAgD,EAAArC,MN6QTK,EAAQxB,EAAKmB,GACbsC,EAAQC,KM9QClC,EAAM7B,EAAQqD,MNgRzB,OAAOS,MM/QX9D,EAAQ6E,OACTY,EAAM0C,OAAO1J,GAAGoG,OAAOqD,IAEvBzC,EAAM0C,QAAQ,EAAG1J,GAAG2J,IAAIF,MAE5BvI,EAAgB0I,SAASrI,EAAQqD,KAAMoC,EAAOE,GAC9ChG,EAAgBuC,gBAAgBjC,EAAQD,EAAQmC,OAChDE,EAAOiG,iBAAiB,aAAc3I,EAAgBM,QACtDoC,EAAOiG,iBAAiB,mBAAoB3I,EAAgBM,QAC5DoC,EAAOqC,OAAO,SAAU/E,EAAgBM,QACxCoC,EAAOqC,OAAO,aAAc/E,EAAgBM,aN2R1C,SAAS/B,EAAQD,GOldvBS,QAAQR,OAAO,OAAOS,UAAU,SAAU,WACxC,GAAAC,EP4dC,OO5dDA,GAAW,WPsdR,OOrdDC,EAAG,EACHC,EAAG,EACHyJ,MAAO,MAETlJ,SAAU,IAEVC,QAAS,WAETC,KAAM,SAACC,EAAOC,EAAIC,EAAOC,GACvB,GAAA6I,GAAAzI,EAAA0I,EAAAzI,EAAAC,EAAAsI,EAAA1J,EAAAC,CP2fG,OO3fHkB,GAAUtB,QAAQwB,OAAOtB,IAAYc,GACrCb,EAAIc,EAAgBgD,SAAS3C,EAAQ4C,QAAU5C,EAAQnB,GACvDC,EAAIa,EAAgBgD,SAAS3C,EAAQ6C,QAAU7C,EAAQlB,GAEvDiB,EAAQJ,EAAgBQ,WACxBsI,EAAS9I,EAAgBsB,YACzBsH,EAAQvI,EAAQuI,MAEhBC,EAAe,KACfvI,EAAS,SAACI,GACR,GAAAqI,EAEA,OAFAF,OAAiB7I,EAAgBQ,WAAWO,OAAO,KAChDC,KAAK,QAAS,SACH,MAAAN,GAA2B,IAAjBA,EAAKQ,QAC7B6H,EAAOF,EAAalE,UAAU,YAAYjE,KAAKA,GAC/CqI,EAAKlE,OAAOvF,aAAa8C,SAAS,KAC/BpB,KAAK,IAAK,WPudR,MOvdWhB,GAAgBsB,cAC7BN,KAAK,SAAU,GACf8D,SACHiE,EAAKzJ,aAAa8C,SAAS,KACxBpB,KAAK,IAAK,SAACW,GPsdT,MOtdezC,GAAEyC,EAAEtB,EAAQnB,IAAM0J,EAAM,IACzC5H,KAAK,IAAK,SAACW,GPudT,MOvdexC,GAAEwC,EAAEtB,EAAQlB,MAC7B6B,KAAK,SAAU,SAACW,GPwdd,MOxdoB3B,GAAgBsB,YAAcnC,EAAEwC,EAAEtB,EAAQlB,MAChE6B,KAAK,QAAS4H,GACjBG,EAAKnE,QACF7D,OAAO,QACPC,KAAK,QAAS,SAACW,EAAEE,GPudf,MOvdqB,WAAWA,IAClCb,KAAK,IAAK,SAACW,GPwdT,MOxdezC,GAAEyC,EAAEtB,EAAQnB,IAAM0J,EAAM,IACzC5H,KAAK,QAAS4H,GACd5H,KAAK,IAAK,WPwdR,MOxdWhB,GAAgBsB,cAC7BN,KAAK,SAAU,GACf1B,aAAa8C,SAAS,KACtBpB,KAAK,IAAK,SAACW,GPudT,MOvdexC,GAAEwC,EAAEtB,EAAQlB,MAC7B6B,KAAK,SAAU,SAACW,GPwdd,MOxdoB3B,GAAgBsB,YAAcnC,EAAEwC,EAAEtB,EAAQlB,OApBnE,QAsBFa,EAAgBuC,gBAAgBjC,EAAQD,EAAQmC,YPie9C,SAASjE,EAAQD,GQ9gBvBS,QAAQR,OAAO,OAAOS,UAAU,UAAW,WRihBxC,OQhhBDU,SAAU,KACVG,OACEoH,OAAQ,IACRvG,KAAM,KAERsI,YAAa,SAAU,WAAY,SAAU,UAAW,WACxD,SAACtG,EAAQC,EAAKC,EAAQqG,EAASC,GAC7B,GAAA9I,GAAA+I,EAAAC,EAAAN,EAAAO,EAAAC,EAAA/H,EAAAgI,EAAAX,CAAAS,GAAS3G,EAAO2G,UAChBD,EAAW1G,EAAO0G,YAElBtH,KAACmF,OAASvE,EAAOuE,SAAYE,IAAK,GAAIE,MAAO,GAAIH,OAAQ,GAAIE,KAAM,IACnE7F,EAAMzC,GAAG+I,OAAOlF,EAAI,IAAI5B,OAAO,OAAOC,KAAK,QAAS,MACjDA,KAAK,QAAS,QACdA,KAAK,SAAU,QAGlB4H,EAAQ,WRmhBD,MQnhBIjG,GAAI,GAAG6G,aAClBV,EAAS,WRqhBF,MQrhBKnG,GAAI,GAAG8G,cAEnBrJ,EAAQmB,EAAIR,OAAO,KAChBC,KAAK,YAAa,aAAec,KAACmF,OAAOG,KAAO,IAAMtF,KAACmF,OAAOE,IAAM,KAEvErF,KAAC4H,OAAS,WRohBH,MQphBMnI,IACbO,KAACtB,SAAW,WRshBL,MQthBQJ,IACf0B,KAAC4G,SAAW,SAAChF,EAAMoC,EAAO6D,GRwhBnB,MQxhB8BN,GAAO3F,IAAUoC,MAAOA,EAAO6D,OAAQA,IAC5E7H,KAACkB,SAAW,SAACU,GR6hBN,MQ7hBe2F,GAAO3F,GAAMoC,OACnChE,KAACS,gBAAkB,SAACzC,EAAI0C,GRkiBjB,MAHa,OAATA,IQ/hBaA,EAAQ,GAAM4G,EAAShF,MAAO9D,OAAQR,EAAI0C,MAAOoH,OAAOpH,MAEhF+G,EAAa,SAAAM,GRsiBN,MQtiBM,YACX,MAAGA,GAACjB,QAASA,KAAWiB,EAACf,SAAUA,KACjCe,EAACjB,MAAQA,IACTiB,EAACf,OAASA,IACVe,EAACxI,WAAawI,EAACjB,MAAQiB,EAAC5C,OAAOG,KAAOyC,EAAC5C,OAAOI,MAC9CwC,EAACvI,YAAcuI,EAACf,OAASe,EAAC5C,OAAOE,IAAM0C,EAAC5C,OAAOC,OAE/C2C,EAACvJ,UANH,SADWwB,MASbwH,EAAY,SAACQ,EAAGC,GRwiBT,MQxiBeD,GAAEtH,MAAQuH,EAAEvH,OAClC2G,EAAW,KACXrH,KAACxB,OAAS,SAAAuJ,GR0iBH,MQ1iBG,YAER,MAAUV,IAAsB,IAAVU,EAACjB,OAAyB,IAAXiB,EAACf,OAAtC,OACAK,EAAWD,EAAS,WAClB,GAAAxI,GAAAsJ,EAAAnI,EAAAqC,EAAAR,EAAAuG,EAAA9F,EAAA2B,CAAAqD,GAAW,KACXzI,EAAOgC,EAAOhC,IACd,KAAAgD,IAAA2F,GR6iBSvD,EAAQuD,EAAO3F,GQ5iBtBoC,EAAM6D,OAAOjJ,ERijBR,KQhjBPuJ,EAAAb,EAAAc,KAAAZ,GAAAnF,KAAAtC,EAAA,EAAAqC,EAAA+F,EAAA/I,OAAAgD,EAAArC,MRijBSmI,EAAUC,EAAIpI,GACdsC,EAAQC,KQjjBf4F,EAAQ1J,OAAOI,GRmjBV,OAAOyD,IQljBdvB,EAAOuH,gBAAkB,OAVnBrI,MAYVmH,EAAQmB,iBAAiB,SAAUb,GAEhB,SAAhB3G,EAAOyH,MACR3H,EAAOqC,OAAO,OAAQjD,KAACxB,QAAQ,GAE/BoC,EAAOqC,OAAO,OAAQjD,KAACxB,QAKzBoC,EAAOqC,OAAOwE,GAEdA,URwjBE,SAAShL,EAAQD,GSxnBvBS,QAAQR,OAAO,OAAOS,UAAU,UAAU,YAAa,SAACF,GT4nBnD,OS3nBHY,SAAU,IACVG,OACEyK,SAAU,IACVC,SAAU,IACV7J,KAAM,KACRd,KAAM,SAAC8C,EAAQC,EAAKC,GAClB,GAAA4H,ET+nBK,OS/nBLA,GAAM5H,EAAO4H,IACb1L,EAAG2L,IAAID,EAAK9H,EAAO4H,SAAU5H,EAAO6H,UAAUG,KAAK,SAACC,GT+nB7C,MS9nBLjI,GAAOhC,KAAOiK,GACd,WAAG,KAAM,mCTyoBT,SAASpM,EAAQD,GUnpBvBS,QAAQR,OAAO,OAAOS,UAAU,aAAc,WAC5C,GAAAC,EVypBC,OUzpBDA,IAAaK,WAAY,MAEzBI,SAAU,IACVC,QAAS,WAETC,KAAM,SAAC8C,EAAQC,EAAKC,EAAQ5C,GAC1B,GAAA4K,GAAArJ,EAAAjC,CVqqBG,OUrqBHiC,GAAMvB,EAAgB0J,SAEtBkB,EAAWrJ,EAAIsJ,OAAO,OAAQ,KAC3B9J,OAAO,kBACPC,KAAK,KAAM4B,EAAOqH,MAEpB,KAAM,KAAM,KAAM,MAAMa,QAAQ,SAAC9J,GVqpB7B,MUppBH4B,GAAOmI,SAAS/J,EAAM,SAACgK,GVqpBlB,MUrpB0BJ,GAAS5J,KAAKA,EAAMgK,OAErD1L,EAAaL,EAASK,WACtBsD,EAAOmI,SAAS,aAAc,SAACC,GAAQ,MAAoB,OAAAA,EAApB1L,EAAa0L,EAAb,SAEvCtI,EAAOqC,OAAOnC,EAAOqI,MAAO,SAACA,GAC3B,MAAc,OAAAA,GACdA,EAAQL,EAASjG,UAAU,QAAQjE,KAAKuK,GACxCA,EAAMrG,QAAQ7D,OAAO,QACrBkK,EAAMjK,KAAK,SAAU,SAACW,GV4pBjB,MU5pBuBA,GAAE+C,SAC3B1D,KAAK,aAAc,SAACW,GV6pBlB,MU7pBwBA,GAAEuJ,QAC5BlK,KAAK,eAAgB,SAACW,GAAM,MAAG,OAAAA,EAAAwJ,QAAgBxJ,EAAEwJ,QAAa,IACjEF,EAAMpG,OAAOC,UANb,cVkrBA,SAASvG,EAAQD,GW/rBvBS,QAAQR,OAAO,OAAOS,UAAU,YAAa,WXksB1C,OWjsBDU,SAAU,IACVC,QAAS,WACTC,KAAM,SAAC8C,EAAQC,EAAKC,EAAQ5C,GAC1B,GAAAI,GAAAgL,CXqsBG,OWrsBHhL,GAAQJ,EAAgBQ,WACxB4K,EAAWhL,EAAMW,OAAO,KAAKC,KAAK,QAAS,YAC3CoK,EAASC,KAAK1I,EAAI0I,aX2sBhB,SAAS9M,EAAQD,GYxtBvBS,QAAQR,OAAO,OAAOS,UAAU,SAAU,WACxC,GAAAC,EZiuBC,OYjuBDA,GAAW,WZ4tBR,OY3tBDC,EAAG,EACHC,EAAG,KAELO,SAAU,IAEVC,QAAS,WAETC,KAAM,SAACC,EAAOC,EAAIC,EAAOC,GACvB,GAAAsL,GAAAC,EAAAlL,EAAAC,EAAApB,EAAAC,CZ6uBG,OY7uBHkB,GAAUtB,QAAQwB,OAAOtB,IAAYc,GACrCb,EAAIc,EAAgBgD,SAAS3C,EAAQ4C,QAAU5C,EAAQnB,GACvDC,EAAIa,EAAgBgD,SAAS3C,EAAQ6C,QAAU7C,EAAQlB,GAEvDmM,EAAOxM,GAAGyC,IAAI+J,OACXpM,EAAE,SAACyC,GZ4tBD,MY5tBOzC,GAAEyC,EAAEtB,EAAQnB,MACrBC,EAAE,SAACwC,GZ6tBD,MY7tBOxC,GAAEwC,EAAEtB,EAAQlB,MAExBoM,EAAW,KACXjL,EAAS,SAACI,GAMR,MALA6K,OAAavL,EAAgBQ,WAAWO,OAAO,QAC5CC,KAAK,QAAS,cAAaX,EAAQqD,MAAQrD,EAAQlB,IACnD8B,MAAM,OAAQ,QACdA,MAAM,SAAUZ,EAAQmL,SAEb,MAAA9K,GAA2B,IAAjBA,EAAKQ,OAC7BqK,EAASrJ,MAAMxB,GACZpB,aACA8C,SAAS,KACTpB,KAAK,IAAKsK,GAJb,QAMFtL,EAAgBuC,gBAAgBjC,EAAQD,EAAQmC,YZguB9C,SAASjE,EAAQD,Ga/vBvBS,QAAQR,OAAO,OAAOS,UAAU,QAAS,WACvC,GAAAC,Eb8wBC,Oa9wBDA,GAAW,WbmwBR,OalwBDC,EAAG,EACHC,EAAG,EACHC,YAAa,EACbC,YAAa,GACbC,WAAY,eACZC,mBAAoB,IACpBkM,UAAW,GACXjM,MAAO,WAETE,SAAU,IAEVC,QAAS,WAETC,KAAM,SAACC,EAAOC,EAAIC,EAAOC,GACvB,GAAA+B,GAAA5B,EAAAC,EAAAsL,EAAAtM,EAAAC,EAAAgB,EAAAsL,EAAArL,Cb62BG,Oa72BHD,GAAUtB,QAAQwB,OAAOtB,IAAYc,GAErCK,EAAQJ,EAAgBQ,WACxBpB,EAAcqB,WAAWJ,EAAQjB,aACjCC,EAAcoB,WAAWJ,EAAQhB,aAE9BU,EAAM6L,SACPF,EAAA,WAAa,OAAO3L,EAAM6L,QAAb,IACN,abowBE,ManwBL9M,IAAGgH,MAAM+F,YAFA,KAGN,cbowBE,ManwBL/M,IAAGgH,MAAMgG,aAJA,KAKN,cbowBE,ManwBLhN,IAAGgH,MAAMiG,mBAEfJ,EAAM7M,GAAG2F,OAAOkH,MAAMzB,KAAK,MACxB1K,MAAM,SAACmC,GbqwBL,MarwBWA,GAAEtB,EAAQb,SAE1BuC,EAAW,KAEX5B,EAAS,KACTG,EAAS,SAACI,GACR,GAAAC,GAAAC,EAAAoL,EAAAvM,EAAAoB,EAAAoL,EAAAC,EAAApL,EAAAgH,CAEA,OAFA3H,OAAWH,EAAgBQ,WAAWO,OAAO,KAAKC,KAAK,QAAS,QAElD,MAAAN,GAA2B,IAAjBA,EAAKQ,QAE7BJ,EAASK,KAAKC,IAAIpB,EAAgBqB,WAAYrB,EAAgBsB,aAAa,EAE3EnB,EAAOa,KAAK,YAAa,aAAeF,EAAS,IAAMA,EAAS,KAEhEH,EAAM7B,GAAGyC,IAAIZ,MACVa,YAAYV,GACZ1B,YAAY0B,EAAS1B,GAExBwB,EAAW,SAACkJ,GACV,GAAAjI,EbmwBG,OanwBHA,GAAI/C,GAAGkD,YAAYF,KAACC,SAAU+H,GAC9BhI,KAACC,SAAWF,EAAE,GACd,SAACI,GbkwBI,MalwBEtB,GAAIkB,EAAEI,MAEfpB,EAAW/B,GAAGyC,IAAIZ,MACfa,YAAYV,EAASzB,GACrBD,YAAY0B,EAASzB,GAExByI,EAAQ3H,EAAOwE,UAAU,QAAQjE,KAAKiL,EAAIjL,IAE1CoH,EAAMlD,QAAQ7D,OAAO,QAClBC,KAAK,QAAS,SAACW,EAAEE,Gb+vBf,Ma/vBsB,WAAWA,IACnCb,KAAK,IAAKL,GACVwL,KAAK,SAACxK,Gb+vBJ,Ma/vBUG,MAACC,SAAWJ,IAGgC5B,EAAM6L,QADjE9D,EAAM7G,MAAM,OAAQ,SAACU,EAAEE,GACrB,MAAG6J,GAAgBA,EAAW7J,GAAQF,EAAE5B,EAAMmL,SAEhDpD,EAAMjD,OAAOC,SAEbgD,EAAMxI,aACH6C,KAAK9B,EAAQf,YACb8C,SAAS/B,EAAQd,oBACjB8C,UAAU,IAAKzB,GAEfP,EAAQZ,OACTyM,EAAS,KACTD,GAAW5L,EAAQoL,UACnBO,EAAc,SAACrK,EAAGE,GAChB,GAAAuK,GAAAC,EAAAC,EAAAC,EAAA7H,EAAA8H,EAAAC,EAAAC,EAAAC,CbgyBG,OahyBHF,GAAW5L,EAAS+L,SAASjL,GAE1BtB,EAAQwM,kBAITH,GAAoBD,EAAS,GAAIA,EAAS,IACvC3K,KAACgL,YACFJ,EAAiB,IAAM5K,KAACgL,UAAU,GAClCJ,EAAiB,IAAM5K,KAACgL,UAAU,IAGpCH,EAASI,EAAEC,UAAUlL,KAACmL,wBAAyB,SAACC,EAAGC,EAAG7I,GACpD,OAAOA,GAAP,IACO,Ob6vBA,Ma5vBH4I,GAAE5I,GAAK6I,EAAIlB,EAAUS,EAAiB,EAF1C,KAGO,Mb6vBA,Ma5vBHQ,GAAE5I,GAAK6I,EAAIlB,EAAUS,EAAiB,EAJ1C,KAKO,Qb6vBA,Ma5vBHQ,GAAE5I,GAAK6I,EAAIlB,EAAUS,EAAiB,EAN1C,KAOO,Sb6vBA,Ma5vBHQ,GAAE5I,GAAK6I,EAAIlB,EAAUS,EAAiB,MAEzCR,KACDS,EAAOtF,MAAQ6E,EAAO9E,MACtBuF,EAAOvF,KAAO8E,EAAO7E,OACrBsF,EAAOzF,OAASgF,EAAO/E,KACvBwF,EAAOxF,IAAM+E,EAAOhF,UACpBoF,EAAMK,EAAOvF,MAAQuF,EAAOtF,MAAQsF,EAAOvF,MAAM,EACjDmF,EAAMI,EAAOxF,KAAOwF,EAAOzF,OAASyF,EAAOxF,KAAK,EAChDiF,EAAMF,EAAO9E,MAAQ8E,EAAO7E,MAAQ6E,EAAO9E,MAAM,EACjDiF,EAAMH,EAAO/E,KAAO+E,EAAOhF,OAASgF,EAAO/E,KAAK,EAChDzC,EAASvD,KAAKiM,KAAKjM,KAAKkM,IAAIf,EAAMF,EAAK,GAAKjL,KAAKkM,IAAId,EAAMF,EAAK,IAAI,EACpEG,EAAY1N,GAAGyC,IAAIZ,MAChBa,YAAYV,EAASzB,EAAcqF,GACnCtF,YAAY0B,EAASzB,EAAcqF,GACtC+H,EAAWD,EAAUI,SAASjL,IAEhCG,KAACgL,UAAYL,EACbP,EAASS,GAEX,aAAaF,EAAS,KAExBhN,EAAQU,EAAOwE,UAAU,QAAQjE,KAAKiL,EAAIjL,IAE1CjB,EAAMmF,QAAQ7D,OAAO,QAClBE,MAAM,cAAe,UACrBD,KAAK,QAAS,SAACW,EAAEE,GbqvBf,MarvBqB,uBAAuBA,IAEjDpC,EAAMoF,OAAOC,SAEbrF,EAAM6C,KAAK,SAACX,EAAEE,GbqvBT,MarvBenB,GAAKmB,GAAGxB,EAAQZ,SAEpCA,EAAMH,aACH6C,KAAK9B,EAAQf,YACb8C,SAAS/B,EAAQd,oBACjByB,KAAK,YAAagL,IA5DvB,QApCA,QAkGFhM,EAAgBuC,gBAAgBjC,EAAQD,EAAQmC,Yb2vB9C,SAASjE,EAAQD,EAASH,Gcr4BhC,GAAAY,KAAUZ,EAAQ,IAElBY,EAAQR,OAAO,UAEfJ,EAAQ,IACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,IACRA,EAAQ,Kdw5BF,SAASI,EAAQD,EAASH,Get6BhC,GAAAW,KAAKX,EAAQ,GAEbY,QAAQR,OAAO,OAAO+O,SAAS,YAAa,WAC1C,GAAArO,Ef68BC,Oe78BDA,GAAW6C,KAAC7C,YAEZ6C,KAACyL,MAAQ,gBAAiB,aAAc,KAAM,SAACC,EAAeC,EAAYC,GACxE,GAAAC,Ef66BG,Oe76BHA,GAAQ1O,EAAS0O,OAASH,EAAc,cAExC/C,IAAK,SAACD,EAAKF,EAAUC,GACnB,GAAAqD,GAAAC,CAaA,OAbAA,GAAWH,EAAGI,QACdF,EAASD,EAAMI,IAAIvD,GAChBoD,IACiBrD,GAAlBA,EAASI,MACTkD,EAASG,QAAQJ,IACnB9O,EAAG2L,IAAID,EAAKF,EAAU,SAACK,Gfi7BhB,Meh7BL8C,GAAWQ,OAAO,WAEhB,MADkB1D,IAAlBA,EAASI,GACNA,GACDgD,EAAMO,IAAI1D,EAAKG,GACfkD,EAASG,QAAQrD,IAEjBkD,EAASM,aACRN,EAASO,YAGpBtM,Qf67BI,SAASvD,EAAQD,GgBt9BvBC,EAAAD,QAAAS","file":"angularD3.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(12)\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = d3;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar d3;\n\t\n\td3 = __webpack_require__(1);\n\t\n\tangular.module('ad3').directive('d3Arc', function() {\n\t  var defaults;\n\t  defaults = function() {\n\t    return {\n\t      x: 0,\n\t      y: 1,\n\t      innerRadius: 0,\n\t      labelRadius: 0,\n\t      transition: \"cubic-in-out\",\n\t      transitionDuration: 1000,\n\t      value: 'value',\n\t      label: 'label'\n\t    };\n\t  };\n\t  return {\n\t    restrict: 'E',\n\t    require: '^d3Chart',\n\t    link: function(scope, el, attrs, chartController) {\n\t      var arcLabel, arcPath, center, chart, innerRadius, labelRadius, options, redraw;\n\t      options = angular.extend(defaults(), attrs);\n\t      chart = chartController.getChart();\n\t      innerRadius = parseFloat(options.innerRadius);\n\t      labelRadius = parseFloat(options.labelRadius);\n\t      center = null;\n\t      arcPath = null;\n\t      arcLabel = null;\n\t      redraw = function(data) {\n\t        var arc, arcTween, labelArc, radius;\n\t        center || (center = chartController.getChart().append(\"g\").attr(\"class\", \"arc\"));\n\t        arcPath || (arcPath = center.append(\"path\"));\n\t        arcLabel || (arcLabel = center.append(\"text\").attr(\"class\", \"arc-label\").attr(\"dy\", \"0.35em\").style(\"text-anchor\", \"middle\"));\n\t        if (!((data != null) && data.length !== 0)) {\n\t          return;\n\t        }\n\t        radius = Math.min(chartController.innerWidth, chartController.innerHeight) / 2;\n\t        center.attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\t        arc = d3.svg.arc().outerRadius(radius).innerRadius(radius * innerRadius).startAngle(0).endAngle(function(d) {\n\t          return d / 100 * 2 * Math.PI;\n\t        });\n\t        arcTween = function(d) {\n\t          var i;\n\t          if (this._current == null) {\n\t            this._current = 0;\n\t          }\n\t          i = d3.interpolate(this._current, d);\n\t          this._current = d;\n\t          return function(t) {\n\t            return arc(i(t));\n\t          };\n\t        };\n\t        labelArc = d3.svg.arc().outerRadius(radius * labelRadius).innerRadius(radius * labelRadius);\n\t        arcPath.datum(data[options.value]).transition().ease(options.transition).duration(options.transitionDuration).attrTween(\"d\", arcTween);\n\t        return arcLabel.text(data[options.label]);\n\t      };\n\t      return chartController.registerElement(redraw, options.order);\n\t    }\n\t  };\n\t});\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tangular.module('ad3').directive('d3Area', function() {\n\t  var defaults;\n\t  defaults = function() {\n\t    return {};\n\t  };\n\t  return {\n\t    restrict: 'E',\n\t    require: '^d3Chart',\n\t    scope: {\n\t      columns: '='\n\t    },\n\t    link: function($scope, $el, $attrs, chartController) {\n\t      var area, areaElement, areaStacked, options, redraw, x, y;\n\t      options = angular.extend(defaults(), $attrs);\n\t      x = chartController.getScale(options.xscale || options.x);\n\t      y = chartController.getScale(options.yscale || options.y);\n\t      if (options.vertical) {\n\t        area = d3.svg.area().y(function(d) {\n\t          return x(d.x);\n\t        }).x0(0).x1(function(d) {\n\t          return y(d.y);\n\t        });\n\t        areaStacked = d3.svg.area().y(function(d) {\n\t          return x(d.x);\n\t        }).x0(function(d) {\n\t          return y(d.y0);\n\t        }).x1(function(d) {\n\t          return y(d.y + d.y0);\n\t        });\n\t      } else {\n\t        area = d3.svg.area().x(function(d) {\n\t          return x(d.x);\n\t        }).y0(function() {\n\t          return chartController.innerHeight;\n\t        }).y1(function(d) {\n\t          return y(d.y);\n\t        });\n\t        areaStacked = d3.svg.area().x(function(d) {\n\t          return x(d.x);\n\t        }).y0(function(d) {\n\t          return y(d.y0);\n\t        }).y1(function(d) {\n\t          return y(d.y + d.y0);\n\t        });\n\t      }\n\t      areaElement = null;\n\t      redraw = function(data) {\n\t        var charts, columns, mappedData, name, stack, stackedData, value;\n\t        areaElement || (areaElement = chartController.getChart().append(\"g\").attr(\"class\", \"area\"));\n\t        if (!((data != null) && data.length !== 0)) {\n\t          return;\n\t        }\n\t        if (options.y != null) {\n\t          columns = options.y;\n\t        }\n\t        if ($scope.columns != null) {\n\t          columns = $scope.columns;\n\t        }\n\t        if (columns == null) {\n\t          return;\n\t        }\n\t        if (angular.isString(columns)) {\n\t          columns = columns.split(',').map(function(c) {\n\t            return c.trim();\n\t          });\n\t        }\n\t        if (columns.length === 0) {\n\t          return;\n\t        }\n\t        mappedData = (function() {\n\t          var j, len, results;\n\t          results = [];\n\t          for (j = 0, len = columns.length; j < len; j++) {\n\t            name = columns[j];\n\t            results.push({\n\t              name: name,\n\t              values: (function() {\n\t                var k, len1, results1;\n\t                results1 = [];\n\t                for (k = 0, len1 = data.length; k < len1; k++) {\n\t                  value = data[k];\n\t                  results1.push({\n\t                    x: value[options.x],\n\t                    y: value[name]\n\t                  });\n\t                }\n\t                return results1;\n\t              })()\n\t            });\n\t          }\n\t          return results;\n\t        })();\n\t        stack = d3.layout.stack().values(function(d) {\n\t          return d.values;\n\t        });\n\t        if (options.offset != null) {\n\t          stack.offset(options.offset);\n\t        }\n\t        stackedData = stack(mappedData);\n\t        charts = areaElement.selectAll('path.area').data(stackedData);\n\t        charts.enter().append(\"path\");\n\t        charts.attr(\"class\", function(d) {\n\t          return \"area \" + d.name;\n\t        }).transition().duration(500).attr(\"d\", function(d, i) {\n\t          if (i === 0) {\n\t            return area(d.values);\n\t          } else {\n\t            return areaStacked(d.values);\n\t          }\n\t        });\n\t        return charts.exit().attr(\"d\", function(d, i) {\n\t          if (i === 0) {\n\t            return area(d.values);\n\t          } else {\n\t            return areaStacked(d.values);\n\t          }\n\t        }).remove();\n\t      };\n\t      $scope.$watch('columns', chartController.redraw, true);\n\t      return chartController.registerElement(redraw, options.order);\n\t    }\n\t  };\n\t});\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tangular.module('ad3').directive('d3Axis', function() {\n\t  var defaults;\n\t  defaults = function() {\n\t    return {\n\t      orientation: 'bottom',\n\t      ticks: '5',\n\t      extent: false\n\t    };\n\t  };\n\t  return {\n\t    priority: 1,\n\t    restrict: 'E',\n\t    require: '^d3Chart',\n\t    scope: {\n\t      customTimeFormat: '=',\n\t      filter: '=',\n\t      tickValues: '='\n\t    },\n\t    link: function($scope, $el, $attrs, chartController) {\n\t      var adjustTickLabels, axisElement, drawGrid, getAxis, grid, label, options, positionLabel, range, redraw, scale, translation, updateScale;\n\t      options = angular.extend(defaults(), $attrs);\n\t      range = function() {\n\t        if (options.orientation === 'top' || options.orientation === 'bottom') {\n\t          if (options.reverse != null) {\n\t            return [chartController.innerWidth, 0];\n\t          } else {\n\t            return [0, chartController.innerWidth];\n\t          }\n\t        } else {\n\t          if (options.reverse != null) {\n\t            return [0, chartController.innerHeight];\n\t          } else {\n\t            return [chartController.innerHeight, 0];\n\t          }\n\t        }\n\t      };\n\t      translation = function() {\n\t        if (options.orientation === 'bottom') {\n\t          return \"translate(0, \" + chartController.innerHeight + \")\";\n\t        } else if (options.orientation === 'top') {\n\t          return \"translate(0, 0)\";\n\t        } else if (options.orientation === 'left') {\n\t          return \"translate(0, 0)\";\n\t        } else if (options.orientation === 'right') {\n\t          return \"translate(\" + chartController.innerWidth + \", 0)\";\n\t        }\n\t      };\n\t      if (options.scale === 'time') {\n\t        scale = d3.time.scale();\n\t      } else if (options.scale) {\n\t        scale = d3.scale[options.scale]();\n\t      } else {\n\t        scale = d3.scale.linear();\n\t      }\n\t      getAxis = function() {\n\t        var axis, format, tickSize;\n\t        axis = d3.svg.axis().scale(scale).orient(options.orientation);\n\t        if (options.ticks) {\n\t          axis.ticks(options.ticks);\n\t        }\n\t        if (options.timeScale) {\n\t          axis.ticks(d3.time[options.timeScale], options.timeInterval);\n\t        }\n\t        if ($scope.tickValues) {\n\t          axis.tickValues($scope.tickValues);\n\t        }\n\t        if (options.tickSize) {\n\t          tickSize = options.tickSize.split(',');\n\t          axis.innerTickSize(tickSize[0]);\n\t          axis.outerTickSize(tickSize[1]);\n\t        }\n\t        if ($scope.customTimeFormat != null) {\n\t          format = d3.time.format.multi(angular.copy($scope.customTimeFormat));\n\t          axis.tickFormat(function(value) {\n\t            return format(new Date(value));\n\t          });\n\t        }\n\t        if (options.timeFormat != null) {\n\t          format = d3.time.format(options.timeFormat);\n\t          axis.tickFormat(function(value) {\n\t            return format(new Date(value));\n\t          });\n\t        } else if (options.format != null) {\n\t          format = d3.format(options.format);\n\t          axis.tickFormat(format);\n\t        }\n\t        return axis;\n\t      };\n\t      positionLabel = function(label) {\n\t        if (options.orientation === 'bottom') {\n\t          return label.attr(\"x\", \"\" + (chartController.innerWidth / 2)).attr(\"dy\", \"\" + chartController.margin.bottom).attr(\"style\", \"text-anchor: middle;\");\n\t        } else if (options.orientation === 'top') {\n\t          return label.attr(\"x\", \"\" + (chartController.innerWidth / 2)).attr(\"dy\", \"\" + (-chartController.margin.top)).attr(\"style\", \"text-anchor: middle;\");\n\t        } else if (options.orientation === 'left') {\n\t          return label.attr(\"x\", \"-\" + (chartController.innerHeight / 2)).attr(\"dy\", \"\" + (-chartController.margin.left + 18)).attr(\"style\", \"text-anchor: middle;\").attr(\"transform\", \"rotate(-90)\");\n\t        } else if (options.orientation === 'right') {\n\t          return label.attr(\"x\", \"\" + (chartController.innerHeight / 2)).attr(\"dy\", \"\" + (-chartController.margin.right + 18)).attr(\"style\", \"text-anchor: middle;\").attr(\"transform\", \"rotate(90)\");\n\t        }\n\t      };\n\t      drawGrid = function(grid, axis) {\n\t        if (options.orientation === 'bottom') {\n\t          return grid.call(axis.tickSize(chartController.innerHeight, 0, 0).tickFormat(''));\n\t        } else if (options.orientation === 'top') {\n\t          return grid.attr(\"transform\", \"translate(0, \" + chartController.innerHeight + \")\").call(axis.tickSize(chartController.innerHeight, 0, 0).tickFormat(''));\n\t        } else if (options.orientation === 'left') {\n\t          return grid.attr(\"transform\", \"translate(\" + chartController.innerWidth + \", 0)\").call(axis.tickSize(chartController.innerWidth, 0, 0).tickFormat(''));\n\t        } else if (options.orientation === 'right') {\n\t          return grid.call(axis.tickSize(chartController.innerWidth, 0, 0).tickFormat(''));\n\t        }\n\t      };\n\t      adjustTickLabels = function(g) {\n\t        var firstTickLabels, lastTickLabels, tickLabels;\n\t        tickLabels = g.selectAll('.tick text');\n\t        if (options.tickDy) {\n\t          tickLabels.attr('dy', options.tickDy);\n\t        }\n\t        if (options.tickDx) {\n\t          tickLabels.attr('dx', options.tickDx);\n\t        }\n\t        if (options.tickAnchor) {\n\t          tickLabels.style('text-anchor', options.tickAnchor);\n\t        }\n\t        lastTickLabels = d3.select(tickLabels[0].slice(-1)[0]);\n\t        if (options.lastTickDy) {\n\t          lastTickLabels.attr('dy', options.lastTickDy);\n\t        }\n\t        if (options.lastTickDx) {\n\t          lastTickLabels.attr('dx', options.lastTickDx);\n\t        }\n\t        if (options.lastTickAnchor) {\n\t          lastTickLabels.style('text-anchor', options.lastTickAnchor);\n\t        }\n\t        firstTickLabels = d3.select(tickLabels[0][0]);\n\t        if (options.firstTickDy) {\n\t          firstTickLabels.attr('dy', options.firstTickDy);\n\t        }\n\t        if (options.firstTickDx) {\n\t          firstTickLabels.attr('dx', options.firstTickDx);\n\t        }\n\t        if (options.listTickAnchor) {\n\t          return firstTickLabels.style('text-anchor', options.firstTickAnchor);\n\t        }\n\t      };\n\t      axisElement = null;\n\t      grid = null;\n\t      label = null;\n\t      redraw = function(data) {\n\t        var axis, tickLabels;\n\t        axisElement || (axisElement = chartController.getChart().append(\"g\").attr(\"class\", \"axis axis-\" + options.orientation + \" axis-\" + options.name).attr(\"transform\", translation()));\n\t        if (options.label) {\n\t          label || (label = axisElement.append(\"text\").attr(\"class\", \"axis-label\").text(options.label));\n\t        }\n\t        if (options.grid) {\n\t          grid || (grid = chartController.getChart().append(\"g\").attr(\"class\", \"axis-grid axis-grid-\" + options.name));\n\t        }\n\t        axis = getAxis();\n\t        if (!((data != null) && data.length !== 0)) {\n\t          return;\n\t        }\n\t        if (label) {\n\t          positionLabel(label.transition().duration(500));\n\t        }\n\t        axisElement.transition().duration(500).attr(\"transform\", translation()).call(axis).selectAll('tick text').tween(\"attr.dx\", null).tween(\"attr.dy\", null).tween(\"style.text-anchor\", null);\n\t        if (grid != null) {\n\t          drawGrid(grid.transition().duration(500), axis);\n\t        }\n\t        tickLabels = axisElement.selectAll('.tick text');\n\t        return axisElement.call(adjustTickLabels);\n\t      };\n\t      updateScale = function(data) {\n\t        var datum, domainValues;\n\t        if (!((data != null) && data.length !== 0)) {\n\t          return;\n\t        }\n\t        scale.range(range());\n\t        if (options.domain) {\n\t          data;\n\t        }\n\t        if ($scope.filter) {\n\t          domainValues = $scope.filter(data);\n\t        } else {\n\t          domainValues = (function() {\n\t            var i, len, results;\n\t            results = [];\n\t            for (i = 0, len = data.length; i < len; i++) {\n\t              datum = data[i];\n\t              results.push(datum[options.name]);\n\t            }\n\t            return results;\n\t          })();\n\t        }\n\t        if (options.extent) {\n\t          return scale.domain(d3.extent(domainValues));\n\t        } else {\n\t          return scale.domain([0, d3.max(domainValues)]);\n\t        }\n\t      };\n\t      chartController.addScale(options.name, scale, updateScale);\n\t      chartController.registerElement(redraw, options.order);\n\t      $scope.$watchCollection('tickValues', chartController.redraw);\n\t      $scope.$watchCollection('customTimeFormat', chartController.redraw);\n\t      $scope.$watch('filter', chartController.redraw);\n\t      return $scope.$watch('tickValues', chartController.redraw);\n\t    }\n\t  };\n\t});\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tangular.module('ad3').directive('d3Bars', function() {\n\t  var defaults;\n\t  defaults = function() {\n\t    return {\n\t      x: 0,\n\t      y: 1,\n\t      width: 15\n\t    };\n\t  };\n\t  return {\n\t    restrict: 'E',\n\t    require: '^d3Chart',\n\t    link: function(scope, el, attrs, chartController) {\n\t      var barsElements, chart, height, options, redraw, width, x, y;\n\t      options = angular.extend(defaults(), attrs);\n\t      x = chartController.getScale(options.xscale || options.x);\n\t      y = chartController.getScale(options.yscale || options.y);\n\t      chart = chartController.getChart();\n\t      height = chartController.innerHeight;\n\t      width = options.width;\n\t      barsElements = null;\n\t      redraw = function(data) {\n\t        var bars;\n\t        barsElements || (barsElements = chartController.getChart().append(\"g\").attr(\"class\", \"bars\"));\n\t        if (!((data != null) && data.length !== 0)) {\n\t          return;\n\t        }\n\t        bars = barsElements.selectAll(\"rect.bar\").data(data);\n\t        bars.exit().transition().duration(500).attr(\"y\", function() {\n\t          return chartController.innerHeight;\n\t        }).attr(\"height\", 0).remove();\n\t        bars.transition().duration(500).attr(\"x\", function(d) {\n\t          return x(d[options.x]) - width / 2;\n\t        }).attr(\"y\", function(d) {\n\t          return y(d[options.y]);\n\t        }).attr(\"height\", function(d) {\n\t          return chartController.innerHeight - y(d[options.y]);\n\t        }).attr(\"width\", width);\n\t        return bars.enter().append(\"rect\").attr(\"class\", function(d, i) {\n\t          return \"bar bar-\" + i;\n\t        }).attr(\"x\", function(d) {\n\t          return x(d[options.x]) - width / 2;\n\t        }).attr(\"width\", width).attr(\"y\", function() {\n\t          return chartController.innerHeight;\n\t        }).attr(\"height\", 0).transition().duration(500).attr(\"y\", function(d) {\n\t          return y(d[options.y]);\n\t        }).attr(\"height\", function(d) {\n\t          return chartController.innerHeight - y(d[options.y]);\n\t        });\n\t      };\n\t      return chartController.registerElement(redraw, options.order);\n\t    }\n\t  };\n\t});\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tangular.module('ad3').directive('d3Chart', function() {\n\t  return {\n\t    restrict: 'EA',\n\t    scope: {\n\t      margin: '=',\n\t      data: '='\n\t    },\n\t    controller: [\n\t      '$scope', '$element', '$attrs', '$window', '$timeout', function($scope, $el, $attrs, $window, $timeout) {\n\t        var chart, debounce, elements, height, scales, sortOrder, svg, updateSize, width;\n\t        scales = $scope.scales = {};\n\t        elements = $scope.elements = [];\n\t        this.margin = $scope.margin || {\n\t          top: 10,\n\t          right: 10,\n\t          bottom: 10,\n\t          left: 10\n\t        };\n\t        svg = d3.select($el[0]).append('svg').attr('class', \"d3\").attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n\t        width = function() {\n\t          return $el[0].offsetWidth;\n\t        };\n\t        height = function() {\n\t          return $el[0].offsetHeight;\n\t        };\n\t        chart = svg.append(\"g\").attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\t        this.getSvg = function() {\n\t          return svg;\n\t        };\n\t        this.getChart = function() {\n\t          return chart;\n\t        };\n\t        this.addScale = function(name, scale, update) {\n\t          return scales[name] = {\n\t            scale: scale,\n\t            update: update\n\t          };\n\t        };\n\t        this.getScale = function(name) {\n\t          return scales[name].scale;\n\t        };\n\t        this.registerElement = function(el, order) {\n\t          if (order == null) {\n\t            order = 0;\n\t          }\n\t          return elements.push({\n\t            redraw: el,\n\t            order: Number(order)\n\t          });\n\t        };\n\t        updateSize = (function(_this) {\n\t          return function() {\n\t            if (_this.width !== width() || _this.height !== height()) {\n\t              _this.width = width();\n\t              _this.height = height();\n\t              _this.innerWidth = _this.width - _this.margin.left - _this.margin.right;\n\t              _this.innerHeight = _this.height - _this.margin.top - _this.margin.bottom;\n\t              return _this.redraw();\n\t            }\n\t          };\n\t        })(this);\n\t        sortOrder = function(a, b) {\n\t          return a.order - b.order;\n\t        };\n\t        debounce = null;\n\t        this.redraw = (function(_this) {\n\t          return function() {\n\t            if (debounce || _this.width === 0 || _this.height === 0) {\n\t              return;\n\t            }\n\t            return debounce = $timeout(function() {\n\t              var data, element, i, len, name, ref, results, scale;\n\t              debounce = null;\n\t              data = $scope.data;\n\t              for (name in scales) {\n\t                scale = scales[name];\n\t                scale.update(data);\n\t              }\n\t              ref = elements.sort(sortOrder);\n\t              results = [];\n\t              for (i = 0, len = ref.length; i < len; i++) {\n\t                element = ref[i];\n\t                results.push(element.redraw(data));\n\t              }\n\t              return results;\n\t            }, $attrs.updateInterval || 200);\n\t          };\n\t        })(this);\n\t        $window.addEventListener('resize', updateSize);\n\t        if ($attrs.watch === 'deep') {\n\t          $scope.$watch('data', this.redraw, true);\n\t        } else {\n\t          $scope.$watch('data', this.redraw);\n\t        }\n\t        $scope.$watch(updateSize);\n\t        updateSize();\n\t      }\n\t    ]\n\t  };\n\t});\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tangular.module('ad3').directive('d3Data', [\n\t  'd3Service', function(d3) {\n\t    return {\n\t      restrict: 'E',\n\t      scope: {\n\t        accessor: '=',\n\t        callback: '=',\n\t        data: '='\n\t      },\n\t      link: function($scope, $el, $attrs) {\n\t        var src;\n\t        src = $attrs.src;\n\t        return d3.csv(src, $scope.accessor, $scope.callback).then(function(rows) {\n\t          return $scope.data = rows;\n\t        }, function() {\n\t          throw 'Error loading CSV via D3';\n\t        });\n\t      }\n\t    };\n\t  }\n\t]);\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tangular.module('ad3').directive('d3Gradient', function() {\n\t  var defaults;\n\t  defaults = {\n\t    transition: 500\n\t  };\n\t  return {\n\t    restrict: 'E',\n\t    require: '^d3Chart',\n\t    link: function($scope, $el, $attrs, chartController) {\n\t      var gradient, svg, transition;\n\t      svg = chartController.getSvg();\n\t      gradient = svg.insert(\"defs\", 'g').append(\"linearGradient\").attr(\"id\", $attrs.ref);\n\t      ['x1', 'x2', 'y1', 'y2'].forEach(function(attr) {\n\t        return $attrs.$observe(attr, function(val) {\n\t          return gradient.attr(attr, val);\n\t        });\n\t      });\n\t      transition = defaults.transition;\n\t      $attrs.$observe('transition', function(val) {\n\t        if (val != null) {\n\t          return transition = val;\n\t        }\n\t      });\n\t      return $scope.$watch($attrs.stops, function(stops) {\n\t        if (stops == null) {\n\t          return;\n\t        }\n\t        stops = gradient.selectAll('stop').data(stops);\n\t        stops.enter().append('stop');\n\t        stops.attr('offset', function(d) {\n\t          return d.offset;\n\t        }).attr('stop-color', function(d) {\n\t          return d.color;\n\t        }).attr('stop-opacity', function(d) {\n\t          if (d.opacity != null) {\n\t            return d.opacity;\n\t          } else {\n\t            return 1;\n\t          }\n\t        });\n\t        return stops.exit().remove();\n\t      });\n\t    }\n\t  };\n\t});\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tangular.module('ad3').directive('d3Include', function() {\n\t  return {\n\t    restrict: 'E',\n\t    require: '^d3Chart',\n\t    link: function($scope, $el, $attrs, chartController) {\n\t      var chart, includes;\n\t      chart = chartController.getChart();\n\t      includes = chart.append('g').attr('class', 'includes');\n\t      return includes.html($el.html());\n\t    }\n\t  };\n\t});\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tangular.module('ad3').directive('d3Line', function() {\n\t  var defaults;\n\t  defaults = function() {\n\t    return {\n\t      x: 0,\n\t      y: 1\n\t    };\n\t  };\n\t  return {\n\t    restrict: 'E',\n\t    require: '^d3Chart',\n\t    link: function(scope, el, attrs, chartController) {\n\t      var line, linePath, options, redraw, x, y;\n\t      options = angular.extend(defaults(), attrs);\n\t      x = chartController.getScale(options.xscale || options.x);\n\t      y = chartController.getScale(options.yscale || options.y);\n\t      line = d3.svg.line().x(function(d) {\n\t        return x(d[options.x]);\n\t      }).y(function(d) {\n\t        return y(d[options.y]);\n\t      });\n\t      linePath = null;\n\t      redraw = function(data) {\n\t        linePath || (linePath = chartController.getChart().append(\"path\").attr(\"class\", \"line line-\" + (options.name || options.y)).style(\"fill\", \"none\").style(\"stroke\", options.stroke));\n\t        if (!((data != null) && data.length !== 0)) {\n\t          return;\n\t        }\n\t        return linePath.datum(data).transition().duration(500).attr(\"d\", line);\n\t      };\n\t      return chartController.registerElement(redraw, options.order);\n\t    }\n\t  };\n\t});\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tangular.module('ad3').directive('d3Pie', function() {\n\t  var defaults;\n\t  defaults = function() {\n\t    return {\n\t      x: 0,\n\t      y: 1,\n\t      innerRadius: 0,\n\t      labelRadius: 0.7,\n\t      transition: \"cubic-in-out\",\n\t      transitionDuration: 800,\n\t      minOffset: 12,\n\t      value: 'value'\n\t    };\n\t  };\n\t  return {\n\t    restrict: 'E',\n\t    require: '^d3Chart',\n\t    link: function(scope, el, attrs, chartController) {\n\t      var _current, center, chart, colorScale, innerRadius, labelRadius, options, pie, redraw;\n\t      options = angular.extend(defaults(), attrs);\n\t      chart = chartController.getChart();\n\t      innerRadius = parseFloat(options.innerRadius);\n\t      labelRadius = parseFloat(options.labelRadius);\n\t      if (attrs.colors) {\n\t        colorScale = (function() {\n\t          switch (attrs.colors) {\n\t            case 'category20':\n\t              return d3.scale.category20();\n\t            case 'category20b':\n\t              return d3.scale.category20b();\n\t            case 'category20c':\n\t              return d3.scale.category20c();\n\t          }\n\t        })();\n\t      }\n\t      pie = d3.layout.pie().sort(null).value(function(d) {\n\t        return d[options.value];\n\t      });\n\t      _current = null;\n\t      center = null;\n\t      redraw = function(data) {\n\t        var arc, arcTween, getPosition, label, labelArc, padding, prevbb, radius, slice;\n\t        center || (center = chartController.getChart().append(\"g\").attr(\"class\", \"pie\"));\n\t        if (!((data != null) && data.length !== 0)) {\n\t          return;\n\t        }\n\t        radius = Math.min(chartController.innerWidth, chartController.innerHeight) / 2;\n\t        center.attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\t        arc = d3.svg.arc().outerRadius(radius).innerRadius(radius * innerRadius);\n\t        arcTween = function(a) {\n\t          var i;\n\t          i = d3.interpolate(this._current, a);\n\t          this._current = i(0);\n\t          return function(t) {\n\t            return arc(i(t));\n\t          };\n\t        };\n\t        labelArc = d3.svg.arc().outerRadius(radius * labelRadius).innerRadius(radius * labelRadius);\n\t        slice = center.selectAll(\".pie\").data(pie(data));\n\t        slice.enter().append(\"path\").attr(\"class\", function(d, i) {\n\t          return \"pie pie-\" + i;\n\t        }).attr(\"d\", arc).each(function(d) {\n\t          return this._current = d;\n\t        });\n\t        if (attrs.colors) {\n\t          slice.style('fill', function(d, i) {\n\t            if (colorScale) {\n\t              return colorScale(i);\n\t            } else {\n\t              return d[attrs.color];\n\t            }\n\t          });\n\t        }\n\t        slice.exit().remove();\n\t        slice.transition().ease(options.transition).duration(options.transitionDuration).attrTween(\"d\", arcTween);\n\t        if (options.label) {\n\t          prevbb = null;\n\t          padding = +options.minOffset;\n\t          getPosition = function(d, i) {\n\t            var cpx, cpy, ctx, cty, offset, offsetArc, position, relativePosition, thisbb;\n\t            position = labelArc.centroid(d);\n\t            if (options.avoidCollisions) {\n\t              relativePosition = [position[0], position[1]];\n\t              if (this._position) {\n\t                relativePosition[0] -= this._position[0];\n\t                relativePosition[1] -= this._position[1];\n\t              }\n\t              thisbb = _.transform(this.getBoundingClientRect(), function(r, v, k) {\n\t                switch (k) {\n\t                  case 'left':\n\t                    return r[k] = v - padding + relativePosition[0];\n\t                  case 'top':\n\t                    return r[k] = v - padding + relativePosition[1];\n\t                  case 'right':\n\t                    return r[k] = v + padding + relativePosition[0];\n\t                  case 'bottom':\n\t                    return r[k] = v + padding + relativePosition[1];\n\t                }\n\t              });\n\t              if (prevbb && !(thisbb.right < prevbb.left || thisbb.left > prevbb.right || thisbb.bottom < prevbb.top || thisbb.top > prevbb.bottom)) {\n\t                ctx = thisbb.left + (thisbb.right - thisbb.left) / 2;\n\t                cty = thisbb.top + (thisbb.bottom - thisbb.top) / 2;\n\t                cpx = prevbb.left + (prevbb.right - prevbb.left) / 2;\n\t                cpy = prevbb.top + (prevbb.bottom - prevbb.top) / 2;\n\t                offset = Math.sqrt(Math.pow(ctx - cpx, 2) + Math.pow(cty - cpy, 2)) / 2;\n\t                offsetArc = d3.svg.arc().outerRadius(radius * labelRadius + offset).innerRadius(radius * labelRadius + offset);\n\t                position = offsetArc.centroid(d);\n\t              }\n\t              this._position = position;\n\t              prevbb = thisbb;\n\t            }\n\t            return \"translate(\" + position + \")\";\n\t          };\n\t          label = center.selectAll(\"text\").data(pie(data));\n\t          label.enter().append(\"text\").style(\"text-anchor\", \"middle\").attr(\"class\", function(d, i) {\n\t            return \"pie-label pie-label-\" + i;\n\t          });\n\t          label.exit().remove();\n\t          label.text(function(d, i) {\n\t            return data[i][options.label];\n\t          });\n\t          return label.transition().ease(options.transition).duration(options.transitionDuration).attr(\"transform\", getPosition);\n\t        }\n\t      };\n\t      return chartController.registerElement(redraw, options.order);\n\t    }\n\t  };\n\t});\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar angular;\n\t\n\tangular = __webpack_require__(14);\n\t\n\tangular.module('ad3', []);\n\t\n\t__webpack_require__(13);\n\t\n\t__webpack_require__(2);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(9);\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(11);\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar d3;\n\t\n\td3 = __webpack_require__(1);\n\t\n\tangular.module('ad3').provider('d3Service', function() {\n\t  var defaults;\n\t  defaults = this.defaults = {};\n\t  this.$get = [\n\t    '$cacheFactory', '$rootScope', '$q', function($cacheFactory, $rootScope, $q) {\n\t      var cache;\n\t      cache = defaults.cache || $cacheFactory('d3Service');\n\t      return {\n\t        csv: function(src, accessor, callback) {\n\t          var cached, deferred;\n\t          deferred = $q.defer();\n\t          cached = cache.get(src);\n\t          if (cached) {\n\t            if (callback) {\n\t              callback(rows);\n\t            }\n\t            deferred.resolve(cached);\n\t          }\n\t          d3.csv(src, accessor, function(rows) {\n\t            return $rootScope.$apply(function() {\n\t              if (callback) {\n\t                callback(rows);\n\t              }\n\t              if (rows) {\n\t                cache.put(src, rows);\n\t                return deferred.resolve(rows);\n\t              } else {\n\t                return deferred.reject();\n\t              }\n\t            });\n\t          });\n\t          return deferred.promise;\n\t        }\n\t      };\n\t    }\n\t  ];\n\t  return this;\n\t});\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = angular;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** angularD3.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 02d73fd3418769bd12b9\n **/","require('./angularD3')\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = d3;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 1\n ** module chunks = 0\n **/","d3 = require('d3')\n\nangular.module('ad3').directive 'd3Arc', ->\n  defaults = ->\n    x: 0\n    y: 1\n    innerRadius: 0\n    labelRadius: 0\n    transition: \"cubic-in-out\"\n    transitionDuration: 1000\n    value: 'value'\n    label: 'label'\n\n  restrict: 'E'\n\n  require: '^d3Chart'\n\n  link: (scope, el, attrs, chartController) ->\n    options = angular.extend(defaults(), attrs)\n\n    chart = chartController.getChart()\n    innerRadius = parseFloat(options.innerRadius)\n    labelRadius = parseFloat(options.labelRadius)\n\n    center = null\n    arcPath = null\n    arcLabel = null\n    redraw = (data) ->\n      center ||= chartController.getChart().append(\"g\").attr(\"class\", \"arc\")\n      arcPath ||= center.append(\"path\")\n      arcLabel ||= center.append(\"text\")\n        .attr(\"class\", \"arc-label\")\n        .attr(\"dy\", \"0.35em\")\n        .style(\"text-anchor\", \"middle\")\n\n      return unless data? and data.length isnt 0\n\n      radius = Math.min(chartController.innerWidth, chartController.innerHeight)/2\n\n      center.attr(\"transform\", \"translate(\" + radius  + \",\" + radius + \")\")\n\n      arc = d3.svg.arc()\n        .outerRadius(radius)\n        .innerRadius(radius * innerRadius)\n        .startAngle(0)\n        .endAngle((d) -> d/100 * 2 * Math.PI)\n\n      arcTween = (d) ->\n        @_current ?= 0\n        i = d3.interpolate(@_current, d)\n        @_current = d\n        (t) -> arc(i(t))\n\n      labelArc = d3.svg.arc()\n        .outerRadius(radius * labelRadius)\n        .innerRadius(radius * labelRadius)\n\n      arcPath.datum(data[options.value])\n        .transition()\n        .ease(options.transition)\n        .duration(options.transitionDuration)\n        .attrTween(\"d\", arcTween)\n\n      arcLabel.text(data[options.label])\n\n    chartController.registerElement(redraw, options.order)\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/directives/arc.coffee\n **/","angular.module('ad3').directive 'd3Area', ->\n  defaults = -> {}\n\n  restrict: 'E'\n  require: '^d3Chart'\n  scope:\n    columns: '='\n\n  link: ($scope, $el, $attrs, chartController) ->\n    # todo: DRY this up in line, area and bar directives\n    options = angular.extend(defaults(), $attrs)\n    x = chartController.getScale(options.xscale or options.x)\n    y = chartController.getScale(options.yscale or options.y)\n\n    if options.vertical\n      area = d3.svg.area()\n        .y((d) -> x(d.x))\n        .x0(0)\n        .x1((d) -> y(d.y))\n      areaStacked = d3.svg.area()\n        .y((d) -> x(d.x))\n        .x0((d) -> y(d.y0))\n        .x1((d) -> y(d.y + d.y0))\n    else\n      area = d3.svg.area()\n        .x((d) -> x(d.x))\n        .y0(-> chartController.innerHeight)\n        .y1((d) -> y(d.y))\n      areaStacked = d3.svg.area()\n        .x((d) -> x(d.x))\n        .y0((d) -> y(d.y0))\n        .y1((d) -> y(d.y + d.y0))\n\n    areaElement = null\n    redraw = (data) ->\n      areaElement ||= chartController.getChart().append(\"g\")\n        .attr(\"class\", \"area\")\n      return unless data? and data.length isnt 0\n      columns = options.y if options.y?\n      if $scope.columns?\n        columns = $scope.columns\n      return unless columns?\n      if angular.isString columns\n        columns = columns.split(',').map((c) -> c.trim())\n      return if columns.length is 0\n\n      mappedData = for name in columns\n        name: name\n        values: for value in data\n          x: value[options.x]\n          y: value[name]\n      stack = d3.layout.stack().values((d) -> d.values)\n      stack.offset(options.offset) if options.offset?\n      stackedData = stack(mappedData)\n\n      charts = areaElement.selectAll('path.area').data(stackedData)\n      charts.enter().append(\"path\")\n      charts.attr(\"class\", (d) -> \"area #{d.name}\")\n        .transition()\n        .duration(500)\n        .attr(\"d\", (d,i) -> if i is 0 then area(d.values) else areaStacked(d.values))\n      charts.exit()\n        .attr(\"d\", (d,i) -> if i is 0 then area(d.values) else areaStacked(d.values))\n        .remove()\n\n    $scope.$watch 'columns', chartController.redraw, true\n    chartController.registerElement(redraw, options.order)\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/directives/area.coffee\n **/","angular.module('ad3').directive 'd3Axis', ->\n  defaults = ->\n    orientation: 'bottom'\n    ticks: '5'\n    extent: false\n\n  priority: 1\n  restrict: 'E'\n  require: '^d3Chart'\n  scope:\n    customTimeFormat: '='\n    filter: '='\n    tickValues: '='\n\n  link: ($scope, $el, $attrs, chartController) ->\n    options = angular.extend(defaults(), $attrs)\n\n    range = ->\n      if options.orientation is 'top' or options.orientation is 'bottom'\n        if options.reverse?\n          [chartController.innerWidth, 0]\n        else\n          [0 ,chartController.innerWidth]\n      else\n        if options.reverse?\n          [0, chartController.innerHeight]\n        else\n          [chartController.innerHeight, 0]\n\n    translation = ->\n      if options.orientation is 'bottom'\n        \"translate(0, #{chartController.innerHeight})\"\n      else if options.orientation is 'top'\n        \"translate(0, 0)\"\n      else if options.orientation is 'left'\n        \"translate(0, 0)\"\n      else if options.orientation is 'right'\n        \"translate(#{chartController.innerWidth}, 0)\"\n\n    if options.scale is 'time'\n      scale = d3.time.scale()\n    else if options.scale\n      scale = d3.scale[options.scale]()\n    else\n      scale = d3.scale.linear()\n\n    getAxis = ->\n      axis = d3.svg.axis().scale(scale).orient(options.orientation)\n      if options.ticks\n        axis.ticks(options.ticks)\n      if options.timeScale\n        axis.ticks(d3.time[options.timeScale], options.timeInterval)\n      if $scope.tickValues\n        axis.tickValues($scope.tickValues)\n      if options.tickSize\n        tickSize = options.tickSize.split(',')\n        axis.innerTickSize(tickSize[0])\n        axis.outerTickSize(tickSize[1])\n      if $scope.customTimeFormat?\n        # We copy this because D3 is bad and mutates the time format.\n        # See: https://github.com/mbostock/d3/issues/1769\n        format = d3.time.format.multi(angular.copy($scope.customTimeFormat))\n        axis.tickFormat((value) -> format(new Date(value)))\n      if options.timeFormat?\n        format = d3.time.format(options.timeFormat)\n        axis.tickFormat((value) -> format(new Date(value)))\n      else if options.format?\n        format = d3.format(options.format)\n        axis.tickFormat(format)\n      axis\n\n    positionLabel = (label) ->\n      if options.orientation is 'bottom'\n        label.attr(\"x\", \"#{chartController.innerWidth / 2}\")\n          .attr(\"dy\", \"#{chartController.margin.bottom}\")\n          .attr(\"style\", \"text-anchor: middle;\")\n      else if options.orientation is 'top'\n        label.attr(\"x\", \"#{chartController.innerWidth / 2}\")\n          .attr(\"dy\", \"#{-chartController.margin.top}\")\n          .attr(\"style\", \"text-anchor: middle;\")\n      else if options.orientation is 'left'\n        label.attr(\"x\", \"-#{chartController.innerHeight / 2}\")\n          .attr(\"dy\", \"#{-chartController.margin.left + 18}\")\n          .attr(\"style\", \"text-anchor: middle;\")\n          .attr(\"transform\", \"rotate(-90)\")\n      else if options.orientation is 'right'\n        label.attr(\"x\", \"#{chartController.innerHeight / 2}\")\n          .attr(\"dy\", \"#{-chartController.margin.right + 18}\")\n          .attr(\"style\", \"text-anchor: middle;\")\n          .attr(\"transform\", \"rotate(90)\")\n\n    drawGrid = (grid, axis) ->\n      if options.orientation is 'bottom'\n        grid.call(axis.tickSize(chartController.innerHeight, 0, 0)\n          .tickFormat('')\n        )\n      else if options.orientation is 'top'\n        grid.attr(\"transform\", \"translate(0, #{chartController.innerHeight})\")\n          .call(axis.tickSize(chartController.innerHeight, 0, 0)\n          .tickFormat('')\n        )\n      else if options.orientation is 'left'\n        grid.attr(\"transform\", \"translate(#{chartController.innerWidth}, 0)\")\n          .call(axis.tickSize(chartController.innerWidth, 0, 0)\n          .tickFormat('')\n        )\n      else if options.orientation is 'right'\n        grid.call(axis.tickSize(chartController.innerWidth, 0, 0)\n          .tickFormat('')\n        )\n\n    adjustTickLabels = (g) ->\n      tickLabels = g.selectAll('.tick text')\n      if options.tickDy\n        tickLabels.attr('dy', options.tickDy)\n      if options.tickDx\n        tickLabels.attr('dx', options.tickDx)\n      if options.tickAnchor\n        tickLabels.style('text-anchor', options.tickAnchor)\n      lastTickLabels = d3.select(tickLabels[0].slice(-1)[0])\n      if options.lastTickDy\n        lastTickLabels.attr('dy', options.lastTickDy)\n      if options.lastTickDx\n        lastTickLabels.attr('dx', options.lastTickDx)\n      if options.lastTickAnchor\n        lastTickLabels.style('text-anchor', options.lastTickAnchor)\n      firstTickLabels = d3.select(tickLabels[0][0])\n      if options.firstTickDy\n        firstTickLabels.attr('dy', options.firstTickDy)\n      if options.firstTickDx\n        firstTickLabels.attr('dx', options.firstTickDx)\n      if options.listTickAnchor\n        firstTickLabels.style('text-anchor', options.firstTickAnchor)\n\n    axisElement = null\n    grid = null\n    label = null\n\n    redraw = (data) ->\n      # Append x-axis to chart\n      axisElement ||= chartController.getChart().append(\"g\")\n        .attr(\"class\", \"axis axis-#{options.orientation} axis-#{options.name}\")\n        .attr(\"transform\", translation())\n      if options.label\n        label ||= axisElement.append(\"text\").attr(\"class\", \"axis-label\").text(options.label)\n      if options.grid\n        grid ||= chartController.getChart().append(\"g\")\n          .attr(\"class\", \"axis-grid axis-grid-#{options.name}\")\n\n      axis = getAxis()\n      return unless data? and data.length isnt 0\n      positionLabel(label.transition().duration(500)) if label\n      axisElement.transition().duration(500)\n        .attr(\"transform\", translation())\n        .call(axis)\n        .selectAll('tick text')\n          .tween(\"attr.dx\", null)\n          .tween(\"attr.dy\", null)\n          .tween(\"style.text-anchor\", null)\n\n      drawGrid(grid.transition().duration(500), axis) if grid?\n      tickLabels = axisElement.selectAll('.tick text')\n      axisElement.call(adjustTickLabels)\n\n    updateScale = (data) ->\n      return unless data? and data.length isnt 0\n      scale.range(range())\n      if options.domain\n        data\n      if $scope.filter\n        domainValues = $scope.filter(data)\n      else\n        domainValues = (datum[options.name] for datum in data)\n      if options.extent\n        scale.domain d3.extent domainValues\n      else\n        scale.domain [0, d3.max domainValues]\n\n    chartController.addScale(options.name, scale, updateScale)\n    chartController.registerElement(redraw, options.order)\n    $scope.$watchCollection 'tickValues', chartController.redraw\n    $scope.$watchCollection 'customTimeFormat', chartController.redraw\n    $scope.$watch 'filter', chartController.redraw\n    $scope.$watch 'tickValues', chartController.redraw\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/directives/axis.coffee\n **/","angular.module('ad3').directive 'd3Bars', ->\n  defaults = ->\n    x: 0\n    y: 1\n    width: 15\n\n  restrict: 'E'\n\n  require: '^d3Chart'\n\n  link: (scope, el, attrs, chartController) ->\n    options = angular.extend(defaults(), attrs)\n    x = chartController.getScale(options.xscale or options.x)\n    y = chartController.getScale(options.yscale or options.y)\n\n    chart = chartController.getChart()\n    height = chartController.innerHeight\n    width = options.width\n\n    barsElements = null\n    redraw = (data) ->\n      barsElements ||= chartController.getChart().append(\"g\")\n        .attr(\"class\", \"bars\")\n      return unless data? and data.length isnt 0\n      bars = barsElements.selectAll(\"rect.bar\").data(data)\n      bars.exit().transition().duration(500)\n        .attr(\"y\", -> chartController.innerHeight)\n        .attr(\"height\", 0)\n        .remove()\n      bars.transition().duration(500)\n        .attr(\"x\", (d) -> x(d[options.x]) - width/2)\n        .attr(\"y\", (d) -> y(d[options.y]))\n        .attr(\"height\", (d) -> chartController.innerHeight - y(d[options.y]))\n        .attr(\"width\", width)\n      bars.enter()\n        .append(\"rect\")\n        .attr(\"class\", (d,i) -> \"bar bar-#{i}\")\n        .attr(\"x\", (d) -> x(d[options.x]) - width/2)\n        .attr(\"width\", width)\n        .attr(\"y\", -> chartController.innerHeight)\n        .attr(\"height\", 0)\n        .transition().duration(500)\n        .attr(\"y\", (d) -> y(d[options.y]))\n        .attr(\"height\", (d) -> chartController.innerHeight - y(d[options.y]))\n\n    chartController.registerElement(redraw, options.order)\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/directives/bars.coffee\n **/","angular.module('ad3').directive 'd3Chart', ->\n  restrict: 'EA'\n  scope:\n    margin: '='\n    data: '='\n\n  controller: ['$scope', '$element', '$attrs', '$window', '$timeout',\n  ($scope, $el, $attrs, $window, $timeout) ->\n    scales = $scope.scales = {}\n    elements = $scope.elements = []\n\n    @margin = $scope.margin or { top: 10, right: 10, bottom: 10, left: 10 }\n    svg = d3.select($el[0]).append('svg').attr('class', \"d3\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", \"100%\")\n\n    # Used to calculated widths based on SVG margins\n    width = -> $el[0].offsetWidth\n    height = -> $el[0].offsetHeight\n\n    chart = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + @margin.left + \",\" + @margin.top + \")\")\n\n    @getSvg = -> svg\n    @getChart = -> chart\n    @addScale = (name, scale, update) -> scales[name] = { scale: scale, update: update }\n    @getScale = (name) -> scales[name].scale\n    @registerElement = (el, order = 0) -> elements.push { redraw: el, order: Number(order) }\n\n    updateSize = =>\n      if @width != width() or @height != height()\n        @width = width()\n        @height = height()\n        @innerWidth = @width - @margin.left - @margin.right\n        @innerHeight = @height - @margin.top - @margin.bottom\n        # Redraw if the chart size has changed\n        @redraw()\n\n    sortOrder = (a, b) -> a.order - b.order\n    debounce = null\n    @redraw = =>\n      # We don't bother to redraw if the chart isn't visible\n      return if debounce or @width is 0 or @height is 0\n      debounce = $timeout =>\n        debounce = null\n        data = $scope.data\n        for name, scale of scales\n          scale.update(data)\n        for element in elements.sort(sortOrder)\n          element.redraw(data)\n      , $attrs.updateInterval or 200\n\n    $window.addEventListener 'resize', updateSize\n\n    if $attrs.watch is 'deep'\n      $scope.$watch 'data', @redraw, true\n    else\n      $scope.$watch 'data', @redraw\n\n    # We check the size on all scope events since scope can affect chart\n    # visibility and if the chart area is resized while not visible it won't\n    # update.\n    $scope.$watch updateSize\n\n    updateSize()\n    return\n  ]\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/directives/chart.coffee\n **/","angular.module('ad3').directive 'd3Data',['d3Service', (d3) ->\n  restrict: 'E'\n  scope:\n    accessor: '='\n    callback: '='\n    data: '='\n  link: ($scope, $el, $attrs) ->\n    src = $attrs.src\n    d3.csv(src, $scope.accessor, $scope.callback).then (rows) ->\n      $scope.data = rows\n    , -> throw('Error loading CSV via D3')\n]\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/directives/data.coffee\n **/","angular.module('ad3').directive 'd3Gradient', ->\n  defaults = { transition: 500 }\n\n  restrict: 'E'\n  require: '^d3Chart'\n\n  link: ($scope, $el, $attrs, chartController) ->\n    svg = chartController.getSvg()\n\n    gradient = svg.insert(\"defs\", 'g')\n      .append(\"linearGradient\")\n      .attr(\"id\", $attrs.ref)\n\n    ['x1', 'x2', 'y1', 'y2'].forEach (attr) ->\n      $attrs.$observe attr, (val) -> gradient.attr(attr, val)\n\n    transition = defaults.transition\n    $attrs.$observe 'transition', (val) -> transition = val if val?\n\n    $scope.$watch $attrs.stops, (stops) ->\n      return unless stops?\n      stops = gradient.selectAll('stop').data(stops)\n      stops.enter().append('stop')\n      stops.attr('offset', (d) -> d.offset)\n        .attr('stop-color', (d) -> d.color)\n        .attr('stop-opacity', (d) -> if d.opacity? then d.opacity else 1)\n      stops.exit().remove()\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/directives/gradient.coffee\n **/","# d3-include\n#\n# Allows arbitrary SVG content to be injected into the chart\n#\n# Todo: Consider making this work more like ng-include and allowing it to fetch\n# the SVG content from view templates.\n\nangular.module('ad3').directive 'd3Include', ->\n  restrict: 'E'\n  require: '^d3Chart'\n  link: ($scope, $el, $attrs, chartController) ->\n    chart = chartController.getChart()\n    includes = chart.append('g').attr('class', 'includes')\n    includes.html($el.html())\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/directives/include.coffee\n **/","angular.module('ad3').directive 'd3Line', ->\n  defaults = ->\n    x: 0\n    y: 1\n\n  restrict: 'E'\n\n  require: '^d3Chart'\n\n  link: (scope, el, attrs, chartController) ->\n    options = angular.extend(defaults(), attrs)\n    x = chartController.getScale(options.xscale or options.x)\n    y = chartController.getScale(options.yscale or options.y)\n\n    line = d3.svg.line()\n      .x((d) -> x(d[options.x]))\n      .y((d) -> y(d[options.y]))\n\n    linePath = null\n    redraw = (data) ->\n      linePath ||= chartController.getChart().append(\"path\")\n        .attr(\"class\", \"line line-#{options.name or options.y}\")\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", options.stroke)\n\n      return unless data? and data.length isnt 0\n      linePath.datum(data)\n        .transition()\n        .duration(500)\n        .attr(\"d\", line)\n\n    chartController.registerElement(redraw, options.order)\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/directives/line.coffee\n **/","angular.module('ad3').directive 'd3Pie', ->\n  defaults = ->\n    x: 0\n    y: 1\n    innerRadius: 0\n    labelRadius: 0.7\n    transition: \"cubic-in-out\"\n    transitionDuration: 800\n    minOffset: 12\n    value: 'value'\n\n  restrict: 'E'\n\n  require: '^d3Chart'\n\n  link: (scope, el, attrs, chartController) ->\n    options = angular.extend(defaults(), attrs)\n\n    chart = chartController.getChart()\n    innerRadius = parseFloat(options.innerRadius)\n    labelRadius = parseFloat(options.labelRadius)\n\n    if attrs.colors\n      colorScale = switch attrs.colors\n        when 'category20'\n          d3.scale.category20()\n        when 'category20b'\n          d3.scale.category20b()\n        when 'category20c'\n          d3.scale.category20c()\n\n    pie = d3.layout.pie().sort(null)\n      .value((d) -> d[options.value])\n\n    _current = null\n\n    center = null\n    redraw = (data) ->\n      center ||= chartController.getChart().append(\"g\").attr(\"class\", \"pie\")\n\n      return unless data? and data.length isnt 0\n\n      radius = Math.min(chartController.innerWidth, chartController.innerHeight)/2\n\n      center.attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\")\n\n      arc = d3.svg.arc()\n        .outerRadius(radius)\n        .innerRadius(radius * innerRadius)\n\n      arcTween = (a) ->\n        i = d3.interpolate(@_current, a)\n        @_current = i(0)\n        (t) -> arc(i(t))\n\n      labelArc = d3.svg.arc()\n        .outerRadius(radius * labelRadius)\n        .innerRadius(radius * labelRadius)\n\n      slice = center.selectAll(\".pie\").data(pie(data))\n\n      slice.enter().append(\"path\")\n        .attr(\"class\", (d,i) ->  \"pie pie-#{i}\")\n        .attr(\"d\", arc)\n        .each((d) -> @_current = d)\n\n      slice.style('fill', (d,i) ->\n        if colorScale then colorScale(i) else d[attrs.color]) if attrs.colors\n\n      slice.exit().remove()\n\n      slice.transition()\n        .ease(options.transition)\n        .duration(options.transitionDuration)\n        .attrTween(\"d\", arcTween)\n\n      if options.label\n        prevbb = null\n        padding = +options.minOffset\n        getPosition = (d, i) ->\n          position = labelArc.centroid(d)\n\n          if options.avoidCollisions\n            # Basic collision adjustment, doesn't seem to quite work all the time.\n            # Adapted from: http://stackoverflow.com/a/20645255/235243\n\n            relativePosition = [position[0], position[1]]\n            if @_position\n              relativePosition[0] -= @_position[0]\n              relativePosition[1] -= @_position[1]\n\n            # Translate and pad the bounding rectangle for collision detection\n            thisbb = _.transform @getBoundingClientRect(), (r, v, k) ->\n              switch k\n                when 'left'\n                  r[k] = v - padding + relativePosition[0]\n                when 'top'\n                  r[k] = v - padding + relativePosition[1]\n                when 'right'\n                  r[k] = v + padding + relativePosition[0]\n                when 'bottom'\n                  r[k] = v + padding + relativePosition[1]\n\n            if prevbb and !(\n              thisbb.right < prevbb.left ||\n              thisbb.left > prevbb.right ||\n              thisbb.bottom < prevbb.top ||\n              thisbb.top > prevbb.bottom)\n              ctx = thisbb.left + (thisbb.right - thisbb.left)/2\n              cty = thisbb.top + (thisbb.bottom - thisbb.top)/2\n              cpx = prevbb.left + (prevbb.right - prevbb.left)/2\n              cpy = prevbb.top + (prevbb.bottom - prevbb.top)/2\n              offset = Math.sqrt(Math.pow(ctx - cpx, 2) + Math.pow(cty - cpy, 2))/2\n              offsetArc = d3.svg.arc()\n                .outerRadius(radius * labelRadius + offset)\n                .innerRadius(radius * labelRadius + offset)\n              position = offsetArc.centroid(d)\n\n            @_position = position\n            prevbb = thisbb\n\n          \"translate(#{position})\"\n\n        label = center.selectAll(\"text\").data(pie(data))\n\n        label.enter().append(\"text\")\n          .style(\"text-anchor\", \"middle\")\n          .attr(\"class\", (d,i) -> \"pie-label pie-label-#{i}\")\n\n        label.exit().remove()\n\n        label.text((d,i) -> data[i][options.label])\n\n        label.transition()\n          .ease(options.transition)\n          .duration(options.transitionDuration)\n          .attr(\"transform\", getPosition)\n\n    chartController.registerElement(redraw, options.order)\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/directives/pie.coffee\n **/","angular = require('angular')\n\nangular.module('ad3', [])\n\nrequire('./services/d3service')\nrequire('./directives/arc')\nrequire('./directives/area')\nrequire('./directives/axis')\nrequire('./directives/bars')\nrequire('./directives/chart')\nrequire('./directives/data')\nrequire('./directives/gradient')\nrequire('./directives/include')\nrequire('./directives/line')\nrequire('./directives/pie')\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/index.coffee\n **/","d3 = require('d3')\n\nangular.module('ad3').provider 'd3Service', () ->\n  defaults = @defaults = {}\n\n  @$get = ['$cacheFactory', '$rootScope', '$q', ($cacheFactory, $rootScope, $q) ->\n    cache = defaults.cache or $cacheFactory('d3Service')\n\n    csv: (src, accessor, callback) ->\n      deferred = $q.defer()\n      cached = cache.get(src)\n      if cached\n        callback(rows) if callback\n        deferred.resolve(cached)\n      d3.csv src, accessor, (rows) ->\n        $rootScope.$apply ->\n          callback(rows) if callback\n          if rows\n            cache.put(src, rows)\n            deferred.resolve(rows)\n          else\n            deferred.reject()\n      return deferred.promise\n  ]\n\n  @\n\n\n\n/** WEBPACK FOOTER **\n ** ./angularD3/services/d3service.coffee\n **/","module.exports = angular;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 14\n ** module chunks = 0\n **/"],"sourceRoot":""}